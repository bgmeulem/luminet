name: Publish to PyPI

on:
  workflow_run:
    workflows: ["Test"]
    types:
      - completed
    branches:
      - master


jobs:
  publish:
    runs-on: ubuntu-latest
    environment: deploy
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - uses: prefix-dev/setup-pixi@v0.8.2
      with:
        pixi-version: v0.41.3
        cache: true
        auth-host: prefix.dev
        auth-token: ${{ secrets.PREFIX_DEV_TOKEN }}
    - name: Build package
      run: |
        pixi r -e build python -m build
        pixi r -e build twine check dist/*
    - name: Publish to TestPyPi
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          Release notes for version v${{ github.run_number }}.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Git Tag
      uses: actions/github-script@v6
      with:
        script: |
          const tagName = `v${{ github.run_number }}`;
          const sha = process.env.GITHUB_SHA;
          await github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/tags/${tagName}`,
            sha: sha
          });
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}